///// _Malak_A7med_ /////
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#define ll long long
#define Malak ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(), v.rend()
#define el "\n"
using namespace std;
bool can(ll t, ll time, vector<ll>& v) { //time = mid
 // tot >>> how many machines we can do at time(mid) / i (this machine time for 1 product)
    ll tot_mach = 0;
    for (auto i : v) {
        tot_mach += time / i;
        if (tot_mach >= t) {
            return true;
        }
    }
    return false;
}
void solve() {
    ll n, t;
    cin >> n >> t; //3 7
    vector<ll>v(n);
    for (auto &i : v) {
        cin >> i; //3 2 5
    }

    ll l = 1, r = 1e18, mid, ans = 0;
    while (l <= r) {
        mid = (l + r) / 2;
        if (can(t, mid, v)) {
            ans = mid;
            r = mid - 1;
        }
        else {
            l = mid + 1;
        }
    }
    cout << ans << el; //8
}

int main() {
    Malak
    int t = 1;
    //cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}


/*
https://cses.fi/problemset/task/1620/ >> on vjudge
https://vjudge.net/contest/661083#problem/G >> on cses
*/
